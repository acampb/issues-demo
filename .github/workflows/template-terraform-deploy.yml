name: Terraform Deploy

on:
  workflow_dispatch:
  workflow_call:


jobs:
  terraform:
    defaults:
      run:
        working-directory: terraform
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: ${{ secrets.GCP_SA_CREDENTIAL }}

      # Install gcloud, `setup-gcloud` automatically picks up authentication from `auth`.
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'

      - uses: hashicorp/setup-terraform@v2

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Workspace Select or Create
        if: github.event_name == 'pull_request'
        id: workspace_pr
        run: |
          WORKSPACES=$(terraform workspace list)
          if ! echo $WORKSPACES | grep -q $GITHUB_HEAD_REF; then
            terraform workspace new $GITHUB_HEAD_REF
          fi
            terraform workspace select $GITHUB_HEAD_REF

      - name: Terraform Workspace Select or Create
        if: github.event_name != 'pull_request'
        id: workspace
        run: |
          WORKSPACES=$(terraform workspace list)
          if ! echo $WORKSPACES | grep -q $GITHUB_REF_NAME; then
            terraform workspace new $GITHUB_REF_NAME
          fi
            terraform workspace select $GITHUB_REF_NAME

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      # - name: Terraform Plan
      #   id: plan
      #   run: terraform plan -no-color
      #   continue-on-error: false

      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve -no-color
        continue-on-error: false

      - name: Find Comment
        if: github.event_name == 'pull_request' && github.event.action == 'labeled' && github.event.label.name == 'deploy environment'
        uses: peter-evans/find-comment@v2
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: Software Factory Build Output

      - name: Create or update comment
        if: github.event_name == 'pull_request' && github.event.action == 'labeled' && github.event.label.name == 'deploy environment'
        uses: peter-evans/create-or-update-comment@v2
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ### :factory: Software Factory Build Output ###
            ---
            I'll update this comment to show the progress of your deployment (using beautiful GitHub **Markdown** :sparkles: )

            | Status | Task |
            | --- | --- |
            | ![](https://img.shields.io/badge/Complete-brightgreen?style=plastic) |  Deploy Google Cloud Run using Terraform |
            | ![](https://img.shields.io/badge/InProgress-blue?style=plastic) | Build Docker image and deploy to Cloud Run instance |

            Application URL: *not yet ready*
          reactions: 'rocket'
          edit-mode: replace
