name: Terraform Deploy

on:
  workflow_dispatch:


jobs:
  test:
    defaults:
      run:
        working-directory: terraform
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Test
        run: |
          echo "ref_name: $GITHUB_REF_NAME"
          export ENV_ID=$(echo $GITHUB_REF_NAME | base64 | tr -d '=/!' | tr '[:upper:]' '[:lower:]'| tail -c 9)
          echo "ENV_ID: $ENV_ID"

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: ${{ secrets.GCP_SA_CREDENTIAL }}

      # Install gcloud, `setup-gcloud` automatically picks up authentication from `auth`.
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'

      - id: 'gcloud'
        name: 'gcloud'
        run: |
          gcloud config list

      - uses: hashicorp/setup-terraform@v2

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Workspace Select
        id: workspace
        run: |
          ENV_ID=$(echo $GITHUB_REF_NAME | base64 | tr -d '=/!' | tr '[:upper:]' '[:lower:]'| tail -c 9)
          WORKSPACES=$(terraform workspace list)
          if ! echo $WORKSPACES | grep -q $ENV_ID; then
            terraform workspace new $ENV_ID
          fi
            terraform workspace select $ENV_ID

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        continue-on-error: true

      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve -no-color
        continue-on-error: true

